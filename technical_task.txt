Python - Прокат автомобилей
Описание проблемы
Организация предоставляет услуги проката автомобилей разных марок. У организации есть несколько точек по
городу. Автомобиль можно взять в прокат в любой точке и сдать в другой. Нужно вести учёт автомобилей в
автоматизированной системе.
Требования
Для выполнения задания необходимо:
1. провести анализ предметной области;
2. спроектировать схему данных для любой реляционной СУБД (MySQL / Maria DB, Postgre SQL, SQL
Server), позволяющую хранить все необходимые данные;
3. разработать web-приложение (backend — python 3.5, frontend - js), удовлетворяющее следующим
условиям:
1. система должна позволять заносить данные в историю проката автомобилей;
2. в системе должна присутствовать страница просмотра истории взятия конкретного автомобиля
в прокат, которая отображает:
• марку автомобиля;
• дату взятия в прокат;
• точку взятия в прокат;
• дату возврата в прокат;
• точку возврата в прокат;
• ФИО арендатора;
• номер автомобиля;
3. система должна выводить статистику по средней продолжительности проката автомобилей в
разрезе марок автомобилей и маршрутов «точка взятия в прокат — точка возврата в прокат»;
4. данные истории взятия в прокат должны загружаться асинхронно, без перезагрузки всей
страницы.
5. работа с БД должна быть асинхронной, использовать модуль asyncio.

Редактирование (создание, удаление) объектов предметной области не обязательно, но будет являться
дополнительным плюсом.
Внешний вид UI системы значения не имеет.
Программный код приложения должен отражать автором понимание концепции "хорошего кода".
Обратить внимание на следующие аспекты:
1. соблюдение концепции MVC при проектировании архитектуры web-приложения;
2. необходимость проектирования с учётом принципов тестопригодности, масштабируемости,
поддерживаемости и т.п.;
3. полноту и корректность проектирования схемы БД, с учётом необходимости контроля целостности
данных, обеспечения корректности в условиях многопользовательского доступа и вопросов
производительности.
